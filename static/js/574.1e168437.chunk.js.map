{"version":3,"file":"static/js/574.1e168437.chunk.js","mappings":"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","sources":["components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx","components/Button/Button.styled.jsx","components/Button/Button.jsx","pages/HomePage/Home.jsx","services/themoviedbAPI.js"],"sourcesContent":["import styled from 'styled-components';\nexport const MovieListStyled = styled.ul`\n  margin: 15px 0 60px 0;\n\n  display: flex;\n  flex-wrap: wrap;\n  gap: 15px;\n  justify-content: center;\n`;\n\nexport const MovieItem = styled.li`\n  max-width: 100%;\n  height: 100%;\n  width: 260px;\n  padding: 8px;\n  cursor: pointer;\n  border-radius: 8px;\n  background-color: transparent;\n  border: none;\n  backdrop-filter: blur(3.5px);\n  box-shadow: rgba(0, 0, 0, 0.2) 0px 2px 4px -1px,\n    rgba(0, 0, 0, 0.14) 0px 4px 5px 0px, rgba(0, 0, 0, 0.12) 0px 1px 10px 0px;\n  transform: scale(1);\n  transition: transform 250ms linear 0s;\n  &:hover {\n    box-shadow: rgb(219 22 172 / 89%) 0px 2px 24px -5px;\n    transform: scale(1.05);\n  }\n  img {\n  }\n`;\n\nexport const MoviePoster = styled.img`\n  width: 100%;\n  height: 100%;\n  min-height: 100%;\n  height: 420px;\n  border-radius: 8px;\n\n  transform: scale(1);\n  object-fit: cover;\n  object-position: center center;\n`;\n\nexport const MovieTitle = styled.p`\n  margin-top: 15px;\n  color: whitesmoke;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  :hover {\n    color: orangered;\n  }\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {\n  MovieListStyled,\n  MovieItem,\n  MoviePoster,\n  MovieTitle,\n} from './MovieList.styled';\n\nconst MovieList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <MovieListStyled>\n      {movies.map(({ id, title, poster_path }) => (\n        <MovieItem key={id}>\n          <Link to={`/movies/${id}`} state={{ from: location }}>\n            <MoviePoster\n              src={\n                poster_path\n                  ? `https://image.tmdb.org/t/p/w500${poster_path}`\n                  : 'https://dummyimage.com/395x574/000/fff.jpg&text=no+poster'\n              }\n              alt={`Poster${title}`}\n            />\n            <MovieTitle>{title}</MovieTitle>\n          </Link>\n        </MovieItem>\n      ))}\n    </MovieListStyled>\n  );\n};\nexport default MovieList;\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      poster_path: PropTypes.string,\n    })\n  ),\n};\n","import styled from 'styled-components';\n\nexport const Btn = styled.button`\n  padding: 8px 16px;\n  border-radius: 8px;\n  background: linear-gradient(\n    141.22deg,\n    rgb(255, 194, 38) 9.4%,\n    rgb(248, 65, 25) 91.91%\n  );\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  text-align: center;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 0px auto 20px;\n  color: #fff;\n  border: 0;\n  text-decoration: none;\n  cursor: pointer;\n  font-family: inherit;\n  font-size: 18px;\n  line-height: 24px;\n  font-style: normal;\n  font-weight: 500;\n  min-width: 180px;\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1) 0s;\n  transform: scale(1);\n  &:hover,\n  &:focus {\n    transform: scale(0.9);\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Btn } from './Button.styled';\n\nconst Button = ({ onLoadMore }) => {\n  return (\n    <Btn type=\"button\" onClick={onLoadMore}>\n      Load more\n    </Btn>\n  );\n};\n\nButton.propTypes = {\n  onLoadMore: PropTypes.func.isRequired,\n};\n\nexport default Button;\n","import { useState, useEffect } from 'react';\nimport { getTrendingMovies } from 'services/themoviedbAPI';\nimport MovieList from '../../components/MovieList/MovieList';\nimport Loader from '../../components/Loader/Loader';\nimport Button from '../../components/Button/Button';\n\nconst Home = () => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [trendingMovies, setTrendingMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    async function fetchTrending(currentPage) {\n      try {\n        setIsLoading(true);\n        const data = await getTrendingMovies(currentPage);\n        setTrendingMovies(prevMovies => [...prevMovies, ...data.results]);\n      } catch (error) {\n        console.log(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    fetchTrending(currentPage);\n  }, [currentPage]);\n\n  const handleLoadMore = () => setCurrentPage(prevPage => prevPage + 1);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      <h2 style={{ textShadow: '-6px 7px 6px rgba(34,17,153,0.47)' }}>\n        Trending today\n      </h2>\n      <MovieList movies={trendingMovies} />\n      <Button onLoadMore={handleLoadMore} />\n    </>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\naxios.defaults.baseURL = `https://api.themoviedb.org/3`;\naxios.defaults.params = {\n  api_key: `a06c90b50d50fe78eda7fc28090f9f2b`,\n};\n\nconst getTrendingMovies = async (page = 1) => {\n  try {\n    const { data } = await axios.get(`trending/movie/day`, {\n      params: { page },\n    });\n\n    return data;\n  } catch (error) {\n    throw new Error('Oops, there is no movies');\n  }\n};\n\nconst getMovieByName = async (page = 1, query = '') => {\n  try {\n    const { data } = await axios.get(`search/movie`, {\n      params: {\n        page,\n        query,\n      },\n    });\n\n    return data;\n  } catch (error) {\n    throw new Error('Oops, there is no movies');\n  }\n};\n\nconst getMovieById = async movieId => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}`, {\n      params: {\n        id: movieId,\n      },\n    });\n\n    return data;\n  } catch (error) {\n    throw new Error('Oops, there is no movies');\n  }\n};\n\nconst getMoviesCast = async movieId => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}/credits`, {\n      params: {\n        id: movieId,\n      },\n    });\n    return data;\n  } catch (error) {\n    throw new Error('Oops, there is no movies');\n  }\n};\n\nconst getMovieReviews = async movieId => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}/reviews`, {\n      params: {\n        id: movieId,\n      },\n    });\n    return data;\n  } catch (error) {\n    throw new Error('Oops, there is no movies');\n  }\n};\n\nconst getMovieVideo = async movieId => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}/videos`, {\n      params: {\n        id: movieId,\n      },\n    });\n    return data;\n  } catch (error) {\n    throw new Error('Oops, there is no movies');\n  }\n};\n\nexport {\n  getTrendingMovies,\n  getMovieByName,\n  getMovieById,\n  getMoviesCast,\n  getMovieReviews,\n  getMovieVideo,\n};\n"],"names":["MovieListStyled","styled","MovieItem","MoviePoster","MovieTitle","movies","location","useLocation","map","id","title","poster_path","to","state","from","src","alt","Btn","onLoadMore","type","onClick","useState","currentPage","setCurrentPage","trendingMovies","setTrendingMovies","isLoading","setIsLoading","useEffect","getTrendingMovies","data","prevMovies","results","console","log","message","fetchTrending","Loader","style","textShadow","MovieList","prevPage","axios","api_key","page","params","Error","getMovieByName","query","getMovieById","movieId","getMoviesCast","getMovieReviews","getMovieVideo"],"sourceRoot":""}