{"version":3,"file":"static/js/951.ec493c81.chunk.js","mappings":"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","sources":["components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx","components/Button/Button.styled.jsx","components/Button/Button.jsx","components/ScrollUp/ScrollUp.styled.jsx","components/ScrollUp/ScrollUp.jsx","pages/HomePage/Home.jsx","services/themoviedbAPI.js"],"sourcesContent":["import styled from 'styled-components';\nexport const MovieListStyled = styled.ul`\n  margin: 15px 0 60px 0;\n\n  display: flex;\n  flex-wrap: wrap;\n  gap: 15px;\n  justify-content: center;\n`;\n\nexport const MovieItem = styled.li`\n  max-width: 100%;\n  height: 100%;\n  width: 260px;\n  padding: 8px;\n  cursor: pointer;\n  border-radius: 8px;\n  background-color: transparent;\n  border: none;\n  backdrop-filter: blur(3.5px);\n  box-shadow: rgba(0, 0, 0, 0.2) 0px 2px 4px -1px,\n    rgba(0, 0, 0, 0.14) 0px 4px 5px 0px, rgba(0, 0, 0, 0.12) 0px 1px 10px 0px;\n  transform: scale(1);\n  transition: transform 250ms linear 0s;\n  &:hover {\n    box-shadow: rgb(219 22 172 / 89%) 0px 2px 24px -5px;\n    transform: scale(1.05);\n  }\n  img {\n  }\n`;\n\nexport const MoviePoster = styled.img`\n  width: 100%;\n  height: 100%;\n  min-height: 100%;\n  height: 420px;\n  border-radius: 8px;\n\n  transform: scale(1);\n  object-fit: cover;\n  object-position: center center;\n`;\n\nexport const MovieTitle = styled.p`\n  margin-top: 15px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  :hover {\n    color: orangered;\n  }\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {\n  MovieListStyled,\n  MovieItem,\n  MoviePoster,\n  MovieTitle,\n} from './MovieList.styled';\n\nconst MovieList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <MovieListStyled>\n      {movies.map(({ id, title, poster_path }, index) => (\n        <MovieItem key={`${id}-${index}`}>\n          <Link to={`/movies/${id}`} state={{ from: location }}>\n            <MoviePoster\n              src={\n                poster_path\n                  ? `https://image.tmdb.org/t/p/w500${poster_path}`\n                  : 'https://dummyimage.com/395x574/000/fff.jpg&text=no+poster'\n              }\n              alt={`Poster${title}`}\n            />\n            <MovieTitle>{title}</MovieTitle>\n          </Link>\n        </MovieItem>\n      ))}\n    </MovieListStyled>\n  );\n};\nexport default MovieList;\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      poster_path: PropTypes.string,\n    })\n  ),\n};\n","import styled from 'styled-components';\n\nexport const Btn = styled.button`\n  padding: 8px 16px;\n  border-radius: 8px;\n  background: linear-gradient(\n    141.22deg,\n    rgb(255, 194, 38) 9.4%,\n    rgb(248, 65, 25) 91.91%\n  );\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  text-align: center;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 0px auto 20px;\n  color: #fff;\n  border: 0;\n  text-decoration: none;\n  cursor: pointer;\n  font-family: inherit;\n  font-size: 18px;\n  line-height: 24px;\n  font-style: normal;\n  font-weight: 500;\n  min-width: 180px;\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1) 0s;\n  transform: scale(1);\n  &:hover,\n  &:focus {\n    transform: scale(0.9);\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Btn } from './Button.styled';\n\nconst Button = ({ onLoadMore }) => {\n  return (\n    <Btn type=\"button\" onClick={onLoadMore}>\n      Load more\n    </Btn>\n  );\n};\n\nButton.propTypes = {\n  onLoadMore: PropTypes.func.isRequired,\n};\n\nexport default Button;\n","import styled from 'styled-components';\n\nexport const ScrollUpBtn = styled.button`\n  display: block;\n  width: 40px;\n  height: 40px;\n  position: fixed;\n  right: 30px;\n  bottom: 20px;\n  border: 2px solid #dc569f;\n  border-radius: 50%;\n  z-index: 50;\n  transition: all 0.3s ease-in-out;\n  cursor: pointer;\n  background: linear-gradient(\n    141.22deg,\n    rgb(255, 194, 38) 9.4%,\n    rgb(248, 65, 25) 91.91%\n  );\n  scale: 1;\n  &:hover {\n    box-shadow: 0px 0px 15px 5px #dc5698cc;\n    scale: 1.2;\n  }\n`;\n\n","import { useState, useEffect } from 'react';\nimport { ScrollUpBtn } from './ScrollUp.styled';\nimport { TbArrowBigUpLinesFilled } from 'react-icons/tb';\n\nconst ScrollUp = () => {\n  const [showScrollUp, setShowScrollUp] = useState(false);\n\n  useEffect(() => {\n    function handleScroll() {\n      if (window.scrollY > 100) {\n        setShowScrollUp(true);\n      } else {\n        setShowScrollUp(false);\n      }\n    }\n    window.addEventListener('scroll', handleScroll);\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n\n  const handleScrollUp = () => {\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth',\n    });\n  };\n\n  return (\n    <>\n      {showScrollUp && (\n        <ScrollUpBtn onClick={handleScrollUp}>\n          <TbArrowBigUpLinesFilled size=\"25\" />\n        </ScrollUpBtn>\n      )}\n    </>\n  );\n};\n\nexport default ScrollUp;\n","import { useState, useEffect } from 'react';\nimport { getTrendingMovies } from 'services/themoviedbAPI';\nimport MovieList from '../../components/MovieList/MovieList';\nimport Loader from '../../components/Loader/Loader';\nimport Button from '../../components/Button/Button';\nimport ScrollUp from '../../components/ScrollUp/ScrollUp';\n\nimport { IconButton, ThemeProvider, createTheme } from '@mui/material';\nimport { RiMoonLine, RiSunLine } from 'react-icons/ri';\n\nconst Home = () => {\n  const [theme, setTheme] = useState(\n    createTheme({\n      palette: {\n        mode: 'light',\n      },\n    })\n  );\n\n  const isDarkMode = theme.palette.mode === 'dark';\n\n  const [currentPage, setCurrentPage] = useState(1);\n  const [trendingMovies, setTrendingMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    async function fetchTrending(currentPage) {\n      try {\n        setIsLoading(true);\n        const data = await getTrendingMovies(currentPage);\n        setTrendingMovies(prevMovies => [...prevMovies, ...data.results]);\n      } catch (error) {\n        console.log(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    fetchTrending(currentPage);\n  }, [currentPage]);\n\n  const handleLoadMore = () => setCurrentPage(prevPage => prevPage + 1);\n\n  const containerStyles = {\n    backgroundColor: theme.palette.mode === 'light' ? '#fff' : '#333',\n    transition: 'background-color 0.3s ease',\n    minHeight: '100vh',\n  };\n\n  const toggleColorMode = () => {\n    const updatedTheme = createTheme({\n      ...theme,\n      palette: {\n        mode: isDarkMode ? 'light' : 'dark',\n      },\n    });\n    setTheme(updatedTheme);\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <div style={containerStyles}>\n        {isLoading && <Loader />}\n        <IconButton onClick={toggleColorMode} sx={{ ml: 1 }}>\n          {isDarkMode ? <RiMoonLine /> : <RiSunLine />}\n        </IconButton>\n        <h2\n          style={{\n            textShadow: '-6px 7px 6px rgba(34,17,153,0.47)',\n            margin: ' 6px 0 0 6px',\n          }}\n        >\n          Trending today\n        </h2>\n        <MovieList movies={trendingMovies} />\n        {!isLoading && <Button onLoadMore={handleLoadMore} />}\n        <ScrollUp />\n      </div>\n    </ThemeProvider>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\naxios.defaults.baseURL = `https://api.themoviedb.org/3`;\naxios.defaults.params = {\n  api_key: `a06c90b50d50fe78eda7fc28090f9f2b`,\n};\n\nconst getTrendingMovies = async page => {\n  try {\n    const { data } = await axios.get(`trending/movie/day`, {\n      params: { page },\n    });\n\n    return data;\n  } catch (error) {\n    throw new Error('Oops, there is no movies');\n  }\n};\n\nconst getMovieByName = async query => {\n  try {\n    const { data } = await axios.get(`search/movie`, {\n      params: { query },\n    });\n    return data;\n  } catch (error) {\n    throw new Error('Oops, there is no movies');\n  }\n};\n\nconst getMovieById = async movieId => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}`, {\n      params: {\n        id: movieId,\n      },\n    });\n\n    return data;\n  } catch (error) {\n    throw new Error('Oops, there is no movies');\n  }\n};\n\nconst getMoviesCast = async movieId => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}/credits`, {\n      params: {\n        id: movieId,\n      },\n    });\n    return data;\n  } catch (error) {\n    throw new Error('Oops, there is no movies');\n  }\n};\n\nconst getMovieReviews = async movieId => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}/reviews`, {\n      params: {\n        id: movieId,\n      },\n    });\n    return data;\n  } catch (error) {\n    throw new Error('Oops, there is no movies');\n  }\n};\n\nconst getMovieVideo = async movieId => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}/videos`, {\n      params: {\n        id: movieId,\n      },\n    });\n    return data;\n  } catch (error) {\n    throw new Error('Oops, there is no movies');\n  }\n};\n\nexport {\n  getTrendingMovies,\n  getMovieByName,\n  getMovieById,\n  getMoviesCast,\n  getMovieReviews,\n  getMovieVideo,\n};\n"],"names":["MovieListStyled","styled","MovieItem","MoviePoster","MovieTitle","movies","location","useLocation","map","index","id","title","poster_path","to","state","from","src","alt","Btn","onLoadMore","type","onClick","ScrollUpBtn","useState","showScrollUp","setShowScrollUp","useEffect","handleScroll","window","scrollY","addEventListener","removeEventListener","scrollTo","top","behavior","size","createTheme","palette","mode","theme","setTheme","isDarkMode","currentPage","setCurrentPage","trendingMovies","setTrendingMovies","isLoading","setIsLoading","getTrendingMovies","data","prevMovies","results","console","log","message","fetchTrending","containerStyles","backgroundColor","transition","minHeight","ThemeProvider","style","Loader","IconButton","updatedTheme","sx","ml","textShadow","margin","MovieList","prevPage","axios","api_key","page","params","Error","getMovieByName","query","getMovieById","movieId","getMoviesCast","getMovieReviews","getMovieVideo"],"sourceRoot":""}